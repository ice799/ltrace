.\" Copyright (c) 1997-2005 Juan Cespedes <cespedes@debian.org>
.\" This file is covered by the GNU GPL
.TH ltrace 1
.SH NAME
ltrace \- A library call tracer

.SH SYNOPSIS
.B ltrace
.I "[-bCfghiLrStttV] [-a column] [-A maxelts] [-D level] [-e expr] [-l filename] [-n nr] [-o filename] [-p pid] ... [-s strsize] [-u username] [-X extern] [-x extern] ... [--align=column] [--debug=level] [--demangle] [--help] [--indent=nr] [--library=filename] [--output=filename] [--version] [command [arg ...]]"

.SH DESCRIPTION
.B ltrace
is a program that simply runs the specified
.I command
until it exits.  It intercepts and records the dynamic library calls
which are called by the executed process and the signals which are
received by that process.
It can also intercept and print the system calls executed by the program.
.PP
Its use is very similar to
.BR strace(1) .

.SH OPTIONS
.TP
.I \-a, \-\-align column
Align return values in a specific
.IR column
(default column is 5/8 of screen width).
.TP
.I \-A maxelts
Maximum number of array elements to print before suppressing the rest with an ellipsis ("...")
.TP
.I \-b, \-\-no-signals
Disable printing of signals recieved by the traced process.
.TP
.I \-c
Count time and calls for each library call and report a summary on program exit.
.TP
.I \-C, \-\-demangle
Decode (demangle) low-level symbol names into user-level names.
Besides removing any initial underscore prefix used by the system,
this makes C++ function names readable.
.TP
.I \-D, \-\-debug level
Show debugging output of
.B ltrace
itself.
.I level
must be a sum of some of the following numbers:
.RS
.TP
.B 01
DEBUG_GENERAL.  Shows helpful progress information
.TP
.B 010
DEBUG_EVENT.  Shows every event received by a traced program
.TP
.B 020
DEBUG_PROCESS.  Shows every action
.B ltrace
carries upon a traced process
.TP
.B 040
DEBUG_FUNCTION.  Shows every entry to internal functions
.RE
.TP
.I \-e expr
A qualifying expression which modifies which events to trace.
The format of the expression is:
.br
[!]value1[,value2]...
.br
where the values are the functions to trace.  Using an exclamation
mark negates the set of values.  For example
.I \-e printf
means to trace only the printf library call.  By contrast,
.I \-e !printf
means to trace every library call except printf.
.IP
Note that some shells use the exclamation point for history
expansion; even inside quoted arguments.  If so, you must escape
the exclamation point with a backslash.
.TP
.I \-f
Trace child processes as they are created by
currently traced processes as a result of the fork(2)
or clone(2) system calls.
The new process is attached immediately.
.TP
.I \-g
Do not place breakpoints on PLT entries. This option reduces
the output of ltrace. This is commonly used to avoid tracing
libc functions.
.TP
.I \-F
Load an alternate config file. Normally, /etc/ltrace.conf and
~/.ltrace.conf will be read (the latter only if it exists).
Use this option to load the given file or files instead of
those two default files.
.TP
.I \-h, \-\-help
Show a summary of the options to ltrace and exit.
.TP
.I \-i
Print the instruction pointer at the time of the library call.
.TP
.I \-l, \-\-library filename
Display only the symbols included in the library
.I filename.
Up to 30 library names can be specified with several instances
of this option.
.TP
.I \-L
DON'T display library calls (use it with the
.I \-S
option).
.TP
.I \-n, \-\-indent nr
Indent trace output by
.I nr
number of spaces for each new nested call. Using this option makes
the program flow visualization easy to follow.
.TP
.I \-o, \-\-output filename
Write the trace output to the file
.I filename
rather than to stderr.
.TP
.I \-p pid
Attach to the process with the process ID
.I pid
and begin tracing.
.TP
.I \-r
Print a relative timestamp with each line of the trace.
This records the time difference between the beginning of
successive lines.
.TP
.I \-s strsize
Specify the maximum string size to print (the default is 32).
.TP
.I \-S
Display system calls as well as library calls
.TP
.I \-t
Prefix each line of the trace with the time of day.
.TP
.I \-tt
If given twice, the time printed will include the microseconds.
.TP
.I \-ttt
If given thrice, the time printed will include the microseconds and
the leading portion will be printed as the number of seconds since the
epoch.
.TP
.I \-T
Show  the  time  spent inside each call. This records the time difference
between the beginning and the end of each call.
.TP
.I \-u username
Run command with the userid, groupid and supplementary groups of
.IR username .
This option is only useful when running as root and enables the
correct execution of setuid and/or setgid binaries.
.TP
.I \-X extern
Some architectures need to know where to set a breakpoint that will be hit
after the dynamic linker has run.  If this flag is used, then the breakpoint
is set at
.IR extern ,
which must be an external function.  By default, '_start' is used.
NOTE: this flag is only available on the architectures that need it.
.TP
.I \-x extern
Trace the external function
.IR extern .
This option may be repeated.
.TP
.I \-V, \-\-version
Show the version number of ltrace and exit.

.SH BUGS
It has most of the bugs stated in
.BR strace(1) .
.LP
Manual page and documentation are not very up-to-date.
.LP
Option -f sometimes fails to trace some children.
.LP
It only works on Linux and in a small subset of architectures.
.LP
Calls to dlopen()ed libraries will not be traced.
.PP
If you would like to report a bug, send a message to the mailing list
(ltrace-devel@lists.alioth.debian.org), or use the
.BR reportbug(1)
program if you are under the Debian GNU/Linux distribution.

.SH FILES
.TP
.I /etc/ltrace.conf
System configuration file
.TP
.I ~/.ltrace.conf
Personal config file, overrides
.I /etc/ltrace.conf

.SH AUTHOR
Juan Cespedes <cespedes@debian.org>

.SH "SEE ALSO"
.BR strace(1) ,
.BR ptrace(2)

